---
import Layout from '../../layouts/Layout.astro';
import employeesData from '../../data/employees.json';

const { employee } = Astro.props;
const contacts = employee.contacts || {};
const phones = contacts.phones || {};

// Tạo mảng số điện thoại với country code
const phoneList = Object.entries(phones).map(([country, number]) => {
  const countryData = {
    vn: {
      code: 'VN',
      flag: '🇻🇳'
    },
    us: {
      code: 'US',
      flag: '🇺🇸'
    },
    cn: {
      code: 'CN',
      flag: '🇨🇳'
    },
    kr: {
      code: 'KR',
      flag: '🇰🇷'
    },
    jp: {
      code: 'JP',
      flag: '🇯🇵'
    },
    sg: {
      code: 'SG',
      flag: '🇸🇬'
    }
  };
  
  // Kiểm tra nếu country tồn tại trong countryData
  if (countryData[country]) {
    return {
      ...countryData[country],
      number
    };
  }
  // Nếu không có trong countryData, trả về dữ liệu mặc định
  return {
    code: country.toUpperCase(),
    flag: '🌐',
    number
  };
});

export function getStaticPaths() {
  return employeesData.employees.map((employee) => ({
    params: { id: employee.id },
    props: { employee },
  }));
}
---

<Layout title={employee.name}>
  <div class="max-w-md mx-auto bg-white rounded-xl shadow-md">
    <div class="p-8 text-center">
      <div class="mb-6">
        <img 
          class="h-32 w-32 rounded-full mx-auto object-cover" 
          src={employee.avatar || '/avatars/default-avatar.jpg'}
          alt={employee.name}
        />
      </div>

      {/* Tên và chức vụ */}
      <div class="mb-6">
        <h1 class="text-2xl font-bold text-gray-800">{employee.name}</h1>
        <p class="text-lg text-gray-600">{employee.position}</p>
      </div>

      {/* Số điện thoại */}
      {contacts.phone && (
        <div class="mb-8">
          <p class="text-xl font-medium text-gray-800">{contacts.phone}</p>
        </div>
      )}

      {/* Nút Share */}
      <div class="flex justify-center gap-4 mb-8">
        <button
          onclick="navigator.share({
            title: document.title,
            text: 'Check out my business card!',
            url: window.location.href
          })"
          class="flex items-center justify-center gap-2 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
          </svg>
          <span>Share</span>
        </button>
      </div>

      {/* Các nút liên hệ chính */}
      <div class="grid grid-cols-2 gap-3 mb-4">
        {phoneList.length > 0 && (
          <div class="relative" style="position: static;">
            <button 
              id="callButton"
              class="w-full flex items-center justify-center gap-2 bg-green-500 text-white py-2.5 px-4 rounded-lg hover:bg-green-600 transition-colors"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M10.5 18.75a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z" />
                <path fill-rule="evenodd" d="M8.625.75A3.375 3.375 0 005.25 4.125v15.75a3.375 3.375 0 003.375 3.375h6.75a3.375 3.375 0 003.375-3.375V4.125A3.375 3.375 0 0015.375.75h-6.75zM7.5 4.125C7.5 3.504 8.004 3 8.625 3H9.75v.375c0 .621.504 1.125 1.125 1.125h2.25c.621 0 1.125-.504 1.125-1.125V3h1.125c.621 0 1.125.504 1.125 1.125v15.75c0 .621-.504 1.125-1.125 1.125h-6.75A1.125 1.125 0 017.5 19.875V4.125z" clip-rule="evenodd" />
              </svg>
              <span>Call</span>
            </button>
            
            <div 
              id="phoneDropdown"
              class="fixed hidden z-50 bg-white rounded-lg shadow-lg"
              style="min-width: 200px; top: auto; left: auto; transform: none;"
            >
              <div class="py-1">
                {phoneList.map(phone => (
                  <a
                    href={`tel:${phone.number}`}
                    class="flex items-center justify-between px-4 py-2 text-gray-800 hover:bg-gray-100"
                  >
                    <span class="text-sm font-medium">{phone.code}</span>
                    <span class="text-sm text-gray-600">{phone.number}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>
        )}

        {contacts.email && (
          <a 
            href={`mailto:${contacts.email}`}
            class="flex items-center justify-center gap-2 bg-blue-500 text-white py-2.5 px-4 rounded-lg hover:bg-blue-600 transition-colors"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
              <path d="M1.5 8.67v8.58a3 3 0 003 3h15a3 3 0 003-3V8.67l-8.928 5.493a3 3 0 01-3.144 0L1.5 8.67z" />
              <path d="M22.5 6.908V6.75a3 3 0 00-3-3h-15a3 3 0 00-3 3v.158l9.714 5.978a1.5 1.5 0 001.572 0L22.5 6.908z" />
            </svg>
            <span>Email</span>
          </a>
        )}
      </div>

      {/* Các nút liên hệ phụ */}
      <div class="grid grid-cols-5 gap-2 justify-items-center mt-4">
        {contacts.whatsapp && (
          <a 
            href={`https://wa.me/${contacts.whatsapp.replace(/[^0-9]/g, '')}`}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center justify-center w-10 h-10 bg-[#25D366] text-white rounded-full hover:bg-[#128C7E] transition-colors"
          >
            <img src="/icons/whatsapp.png" alt="WhatsApp" class="">
          </a>
        )}

        {contacts.zalo && (
          <a 
            href={`https://zalo.me/${contacts.zalo.replace(/[^0-9]/g, '')}`}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center justify-center w-10 h-10 bg-[#0068FF] text-white rounded-full hover:bg-[#0054CC] transition-colors"
          >
            <img src="/icons/zalo.png" alt="Zalo" class="">
          </a>
        )}

        {contacts.wechat && (
          <a 
            href="#"
            class="flex items-center justify-center w-10 h-10 bg-[#7BB32E] text-white rounded-full hover:bg-[#6B9E29] transition-colors"
            onclick={`alert('WeChat ID: ${contacts.wechat}')`}
          >
            <img src="/icons/wechat.png" alt="WeChat" class="">
          </a>
        )}

        {contacts.skype && (
          <a 
            href={`skype:${contacts.skype}?chat`}
            class="flex items-center justify-center w-10 h-10  rounded-full  "
          >
           <img src="/icons/skype.png" alt="Skype" class="">
          </a>
        )}

        {contacts.linkedin && (
          <a 
            href={contacts.linkedin}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center justify-center w-10 h-10  rounded-full "
          >
            <img src="/icons/linked.png" alt="LinkedIn" class="">
          </a>
        )}
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const callButton = document.getElementById('callButton');
    const phoneDropdown = document.getElementById('phoneDropdown');
    let isDropdownVisible = false;

    function updateDropdownPosition() {
      if (isDropdownVisible && callButton && phoneDropdown) {
        const buttonRect = callButton.getBoundingClientRect();
        phoneDropdown.style.top = `${buttonRect.bottom + window.scrollY + 5}px`;
        phoneDropdown.style.left = `${buttonRect.left + window.scrollX}px`;
        phoneDropdown.style.width = `${buttonRect.width}px`;
      }
    }

    callButton?.addEventListener('click', function(e) {
      e.stopPropagation();
      isDropdownVisible = !isDropdownVisible;
      
      if (isDropdownVisible) {
        phoneDropdown?.classList.remove('hidden');
        updateDropdownPosition();
      } else {
        phoneDropdown?.classList.add('hidden');
      }
    });

    // Cập nhật vị trí khi cuộn trang
    window.addEventListener('scroll', updateDropdownPosition);
    
    // Cập nhật vị trí khi thay đổi kích thước cửa sổ
    window.addEventListener('resize', updateDropdownPosition);

    document.addEventListener('click', function(e) {
      if (!callButton?.contains(e.target as Node) && !phoneDropdown?.contains(e.target as Node)) {
        isDropdownVisible = false;
        phoneDropdown?.classList.add('hidden');
      }
    });
  });
</script>